### QUESTIONS ###

Q1: This case and the previous line "case long_iso_time_style:"
    used to yield same result as there is no "breas" in between.
    
    In the second hunk, these lines were deleted:
    ...

    if (locale_format == long_time_format[i])
        goto case_long_iso_time_style;
    ...

    Since the case where "case_long_iso_time_style" gets to called
    is removed, the case is now unnecessary.
     

Q2: To have a thorough understanding of this function,
    I looked into the patched file and go to line 2029
    (emacs ./src/ls.c , M-g g 2029)
    The following lines were shown:
    
        /* Ensure that the locale has translations for both
           formats.  If not, fall back on long-iso format.  */
	int i;
        for (i = 0; i < 2; i++)
          long_time_format[i] =
            dcgettext (NULL, long_time_format[i], LC_TIME);
	...

    Therefore if my LC_TIME adopts non-English-format dates and
    my locale does not have proper translation for both formats,
    it will fall back on long-iso format(i.e. "%Y-%m-%d %H:%M")
    However, this may conflict with countries using other format,
    (e.g Month-Day-Year)

Q3: It has the following error message:

    Traceback (most recent call last):
      File "./randline.py", line 70, in <module>
        main()
      File "./randline.py", line 64, in main
        sys.stdout.write(generator.chooseline())
      File "./randline.py", line 34, in chooseline
        return random.choice(self.lines)
      File "/usr/lib64/python2.6/random.py", line 261, in choice
        return seq[int(self.random() * len(seq))]
      # raises IndexError if seq is empty
    IndexError: list index out of range

    Since what this script does is to random a number between
    0 and (max line of input file - 1). As the input file is
    empty (0 lines), it raises an IOError.

Q4: It has the following error message:

      File "./randline.py", line 65
        except IOError as (errno, strerror):
                          ^
    SyntaxError: invalid syntax

    The syntax error araises because of the removal of tuple
    parameter unpacking in python 3.
